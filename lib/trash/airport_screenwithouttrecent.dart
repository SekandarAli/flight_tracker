// ignore_for_file: prefer_const_constructorsimport 'dart:async';import 'dart:convert';import 'package:flight_tracker/airports/screen/airport_screen_detail.dart';import 'package:flight_tracker/app_theme/color.dart';import 'package:flight_tracker/app_theme/reusing_widgets.dart';import 'package:flight_tracker/app_theme/theme_texts.dart';import 'package:flight_tracker/functions/function_progress_indicator.dart';import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:hive_flutter/adapters.dart';import '../../recent_airport_airline_search/model/model_recent_search.dart';class AirportsScreen extends StatefulWidget {  AirportsScreen({super.key});  @override  State<AirportsScreen> createState() => _AirportsScreenState();}class _AirportsScreenState extends State<AirportsScreen> {  TextEditingController searchAirportController = TextEditingController();  List beforeSearch = [];  List afterSearch = [];  String query = '';  @override  void initState() {    super.initState();    setState(() {      readJson();    });  }  Future<void> readJson() async {    final String response =    await rootBundle.loadString('assets/json/airport.json');    final data = await json.decode(response);    setState(() {      beforeSearch = data["response"];    });  }  void setResults(String query) {    afterSearch = beforeSearch        .where((elem) => elem['iata_code'].toString().toLowerCase().contains(query.toLowerCase()) ||        elem['name'].toString().toLowerCase().contains(query.toLowerCase())).toList();  }  @override  Widget build(BuildContext context) {    double h = MediaQuery.of(context).size.height;    double w = MediaQuery.of(context).size.width;    return Scaffold(      backgroundColor: ColorsTheme.primaryColor,      body: SafeArea(        child: Container(          color: ColorsTheme.white,          child: Column(            children: [              ReusingWidgets.SearchTextFormField(                  hintText: "Search for an Airport",                  textEditingController: searchAirportController,                  onChange: (v) {                    setState(() {                      query = v;                      setResults(query);                    });                  },                  onTapClear: (){                    setState(() {                      query = "";                      searchAirportController.clear();                    });                  }, context: context,                  backIconStatus: false              ),              Expanded(                child: Container(                    width: MediaQuery.of(context).size.width,                    decoration: BoxDecoration(                      color: ColorsTheme.primaryColor,                      borderRadius: BorderRadius.only(                        topRight: Radius.circular(50),                        topLeft: Radius.circular(50),                      ),                    ),                    padding: EdgeInsets.only(left: 20, right: 20, top: 30),                    child: Column(                      crossAxisAlignment: CrossAxisAlignment.start,                      children: [                        Text(                      "All Airports",                      style: ThemeTexts.textStyleTitle1                          .copyWith(color: Colors.white, fontSize: 20),                    ),                    SizedBox(height: 20),                    Expanded(                      child: Container(                          width: MediaQuery.of(context).size.width,                          padding: EdgeInsets.all(0),                          decoration: BoxDecoration(                            color: ColorsTheme.white,                            borderRadius: BorderRadius.only(                              topRight: Radius.circular(20),                              topLeft: Radius.circular(20),                            ),                          ),                          child: Column(                            children: [                              searchAirportController.text.isEmpty ?                          Align(                            alignment: Alignment.topLeft,                            child: Text("\n\t\tAll",style: ThemeTexts.textStyleTitle2                                .copyWith(color: ColorsTheme.primaryColor, ),),                          ) : Container(),                          Flexible(                              child: query.isEmpty ?                              ListView.builder(                                padding: EdgeInsets.all(5),                                shrinkWrap: true,                                itemCount: beforeSearch.length,                                itemBuilder: (context, index) {                                  String cityName = beforeSearch[index]["iata_code"] ?? "---";                                  String countryShortName = beforeSearch[index]["country_code"] ?? "---";                                  String airportName = beforeSearch[index]["name"] ?? "---";                                  String iataValue = beforeSearch[index]["iata_code"] ?? "---";                                  print(beforeSearch.length);                                  return                                    ListTile(                                      title: Text(                                          "$cityName,"" $countryShortName",                                          style: ThemeTexts                                              .textStyleValueBlack.copyWith(fontWeight: FontWeight.bold,fontSize: 14)),                                      subtitle: Text(airportName,                                          style: ThemeTexts                                              .textStyleValueBlack2.copyWith(color: ColorsTheme.themeColor)),                                      onTap: () async {                                        Navigator.push(context, MaterialPageRoute(builder: (context) {                                          return AirportScreenDetail(                                            airportName: airportName,                                            iataValue: iataValue,                                          );                                        }));                                      },                                    );                                },                              )                                  :                              afterSearch.isEmpty ? NoSearchFound() : ListView.builder(                                padding: EdgeInsets.all(5),                                shrinkWrap: true,                                itemCount: afterSearch.length,                                itemBuilder: (context, index) {                                  String cityName = afterSearch[index]["iata_code"] ?? "---";                                  String countryShortName = afterSearch[index]["country_code"] ?? "---";                                  String airportName = afterSearch[index]["name"] ?? "---";                                  String iataValue = afterSearch[index]["iata_code"] ?? "---";                                  print("aaaaa${afterSearch.length}");                                  return                                    ListTile(                                      title: Text(                                          "$cityName,"" $countryShortName",                                          style: ThemeTexts                                              .textStyleValueBlack.copyWith(fontWeight: FontWeight.bold,fontSize: 14)),                                      subtitle: Text(airportName,                                          style: ThemeTexts                                              .textStyleValueBlack2.copyWith(color: ColorsTheme.themeColor)),                                      onTap: () async {                                        Navigator.push(context, MaterialPageRoute(builder: (context) {                                          return AirportScreenDetail(                                            airportName: airportName,                                            iataValue: iataValue,                                          );                                        }));                                      },                                    );                                },                              )                          ),                        ],                      )),                    ),                  ],                )),              ),            ],          ),        ),      ),    );  }}